{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport const store = new Vuex.Store({\n  state: {\n    taskList: [],\n    // taskList: [{id: '', text: \"\", status: 0, isActive: false,  isEdit: false}],\n    isEdit: false,\n    editTaskId: null\n  },\n  getters: {\n    TASK: state => {\n      return state.taskList;\n    }\n  },\n  mutations: {\n    SET_TASK: (state, payload) => {\n      state.taskList = payload;\n    },\n    SET_EDIT: state => {\n      state.isEdit = !state.isEdit;\n    },\n    SET_EDITTASKID: (state, payload) => {\n      state.editTaskId = payload;\n    },\n    CHANGE_STATUS: (state, payload) => {\n      state.taskList.map(task => {\n        if (task.id === payload) {\n          task.isActive = !task.isActive;\n        }\n      });\n    },\n    TASK_CLICK: (state, payload) => {\n      state.taskList.map(task => {\n        if (task.id === payload) {\n          task.isEdit = !task.isEdit;\n        }\n      });\n    },\n    DELETE_TASK: (state, payload) => {\n      state.taskList = state.taskList.filter(item => {\n        return item.id !== payload;\n      });\n\n      // state.taskList.map((task) => {\n      //   if (task.id === payload) {\n      //     state.taskList.slice(payload, 1);\n      //   }\n      // });\n    }\n  },\n\n  actions: {\n    // payload = {id: 2, text: \"tetst\", status: sdsf} = task\n    updateTask: async (context, payload) => {\n      // payload =  {text: \"jhjfsfd\"}\n      // payload =  {status: \"jhjfsfd\"}\n      // TODO: найти таску по id\n      // TODO: обновить статус на противоположный\n      context.commit(\"up_dATE_TASK\", payload);\n    },\n    changeStatus: async (context, payload) => {\n      // TODO: найти таску по id\n      // TODO: обновить статус на противоположный\n      context.commit(\"CHANGE_STATUS\", payload);\n    },\n    deleteTask: (context, payload) => {\n      // TODO: найти таску по id\n      // TODO: удалить эту таску из стора\n      context.commit(\"DELETE_TASK\", payload);\n    },\n    taskClick: (context, payload) => {\n      if (context.isEdit) {\n        context.commit(\"SET_EDITTASKID\", null);\n      } else {\n        context.commit(\"SET_EDITTASKID\", payload);\n      }\n      context.commit(\"SET_EDIT\");\n    },\n    addTask: function (context, payload) {\n      context.commit(\"ADD_TASK\", payload);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","store","Store","state","taskList","isEdit","editTaskId","getters","TASK","mutations","SET_TASK","payload","SET_EDIT","SET_EDITTASKID","CHANGE_STATUS","map","task","id","isActive","TASK_CLICK","DELETE_TASK","filter","item","actions","updateTask","context","commit","changeStatus","deleteTask","taskClick","addTask","modules"],"sources":["C:/Users/79522/Desktop/Visual Studio code Проекты/gpn_dz/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n  state: {\n    taskList: [],\n    // taskList: [{id: '', text: \"\", status: 0, isActive: false,  isEdit: false}],\n    isEdit: false,\n    editTaskId: null,\n  },\n  getters: {\n    TASK: (state) => {\n      return state.taskList;\n    },\n  },\n  mutations: {\n    SET_TASK: (state, payload) => {\n      state.taskList = payload;\n    },\n    SET_EDIT: (state) => {\n      state.isEdit = !state.isEdit;\n    },\n    SET_EDITTASKID: (state, payload) => {\n      state.editTaskId = payload;\n    },\n\n\n    CHANGE_STATUS: (state, payload) => {\n      state.taskList.map((task) => {\n        if (task.id === payload) {\n          task.isActive = !task.isActive;\n        }\n      });\n    },\n    TASK_CLICK: (state, payload) => {\n      state.taskList.map((task) => {\n        if (task.id === payload) {\n          task.isEdit = !task.isEdit;\n        }\n      });\n    },\n    DELETE_TASK: (state, payload) => {\n      state.taskList = state.taskList.filter((item) => {\n        return item.id !== payload;\n      });\n\n      // state.taskList.map((task) => {\n      //   if (task.id === payload) {\n      //     state.taskList.slice(payload, 1);\n      //   }\n      // });\n    },\n  },\n\n  actions: {\n    // payload = {id: 2, text: \"tetst\", status: sdsf} = task\n    updateTask: async (context, payload) => {\n      // payload =  {text: \"jhjfsfd\"}\n            // payload =  {status: \"jhjfsfd\"}\n      // TODO: найти таску по id\n      // TODO: обновить статус на противоположный\n      context.commit(\"up_dATE_TASK\", payload);\n    },\n\n\n    changeStatus: async (context, payload) => {\n      // TODO: найти таску по id\n      // TODO: обновить статус на противоположный\n      context.commit(\"CHANGE_STATUS\", payload);\n    },\n    deleteTask: (context, payload) => {\n      // TODO: найти таску по id\n      // TODO: удалить эту таску из стора\n      context.commit(\"DELETE_TASK\", payload);\n    },\n    taskClick: (context, payload) => {\n      if (context.isEdit) {\n        context.commit(\"SET_EDITTASKID\", null);\n      } else {\n        context.commit(\"SET_EDITTASKID\", payload);\n      }\n      context.commit(\"SET_EDIT\");\n    },\n    addTask: function (context, payload) {\n      context.commit(\"ADD_TASK\", payload);\n    },\n  },\n  modules: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}